services:
    dibs.module:
        class: 'DibsEasy'
        factory: ['Module', 'getInstanceByName']
        arguments:
            - 'dibseasy'

    dibs.adapter.configuration:
        class: 'Invertus\DibsEasy\Adapter\ConfigurationAdapter'

    dibs.adapter.language:
        class: 'Invertus\DibsEasy\Adapter\LanguageAdapter'

    dibs.adapter.tools:
        class: 'Invertus\DibsEasy\Adapter\ToolsAdapter'

    dibs.adapter.link:
        class: 'Invertus\DibsEasy\Adapter\LinkAdapter'

    dibs.adapter.price_round:
        class: 'Invertus\DibsEasy\Adapter\PriceRoundAdapter'

    dibs.context.db:
        class: 'Db'
        factory: ['Db', 'getInstance']

    dibs.installer:
        class: 'Invertus\DibsEasy\Install\Installer'
        arguments:
            - '@dibs.module'
            - '@dibs.adapter.configuration'
            - '@dibs.adapter.language'
            - '@dibs.adapter.tools'
            - '@dibs.context.db'
            - '%module_settings%'

    dibs.service.client_factory:
        class: 'Invertus\DibsEasy\Service\ClientFactory'
        arguments:
            - '@dibs.adapter.configuration'
            - '%api_test_url%'
            - '%api_prod_url%'

    dibs.http_client:
        class: 'GuzzleHttp\Client'
        factory: 'dibs.service.client_factory:createNew'

    dibs.service.api_request:
        class: 'Invertus\DibsEasy\Service\ApiRequest'
        arguments:
            - '@dibs.http_client'
            - '@dibs.adapter.tools'

    dibs.service.payment:
        class: 'Invertus\DibsEasy\Service\PaymentService'
        arguments:
            - '@dibs.service.api_request'
            - '@dibs.repository.order_payment'
            - '@dibs.adapter.tools'
            - '@dibs.adapter.link'

    dibs.repository.order_payment:
        class: 'Invertus\DibsEasy\Repository\OrderPaymentRepository'
        arguments:
            - '@dibs.context.db'

    dibs.action.payment_cancel:
        class: 'Invertus\DibsEasy\Action\PaymentCancelAction'
        arguments:
            - '@dibs.service.payment'
            - '@dibs.adapter.configuration'
            - '@dibs.repository.order_payment'
            - '@dibs.module'

    dibs.action.payment_charge:
        class: 'Invertus\DibsEasy\Action\PaymentChargeAction'
        arguments:
            - '@dibs.service.payment'
            - '@dibs.repository.order_payment'
            - '@dibs.adapter.configuration'
            - '@dibs.module'

    dibs.action.payment_refund:
        class: 'Invertus\DibsEasy\Action\PaymentRefundAction'
        arguments:
            - '@dibs.service.payment'
            - '@dibs.adapter.configuration'
            - '@dibs.repository.order_payment'
            - '@dibs.module'

    dibs.action.payment_create:
        class: 'Invertus\DibsEasy\Action\PaymentCreateAction'
        arguments:
            - '@dibs.service.payment'
            - '@dibs.adapter.link'
            - '@dibs.module'
            - '@dibs.adapter.configuration'
            - '@dibs.service.country_mapper'

    dibs.action.payment_get:
        class: 'Invertus\DibsEasy\Action\PaymentGetAction'
        arguments:
             - '@dibs.service.payment'

    dibs.action.payment_update_items:
        class: 'Invertus\DibsEasy\Action\PaymentUpdateCartItemsAction'
        arguments:
            - '@dibs.module'
            - '@dibs.service.payment'

    dibs.util.address_checksum:
        class: 'Invertus\DibsEasy\Util\AddressChecksum'

    dibs.service.country_mapper:
        class: 'Invertus\DibsEasy\Service\CountryMapper'

    dibs.service.default_shipping_country_provider:
        class: 'Invertus\DibsEasy\Service\DefaultShippingCountryProvider'
        arguments:
            - '@dibs.service.country_mapper'
